#!/bin/bash
# SPDX-License-Identifier: GPL-2.0

set -e
for f in `ls ${VERSIONING}/*`
  do
    source $f
  done
if [ -f "customize.sh" ] ; then
  source customize.sh
fi
cd Packages

echo "** Install OctoPrint **"
set -x
cd OctoPrint
if [ ! -d $OCTOPRINT_HOME ]; then
  mkdir -p $OCTOPRINT_HOME
fi

# Make config file for Octoprint
cp config.yaml ${OCTOPRINT_HOME}/.octoprint/
sed -i "s/KAMIKAZE/$VERSION/" ${OCTOPRINT_HOME}/.octoprint/config.yaml
chown  -R octo:octo "${OCTOPRINT_HOME}/"

# instructions lovingly stolen from https://discourse.octoprint.org/t/setting-up-octoprint-on-a-raspberry-pi-running-raspbian/2337

su - octo <<EOF
  set -e
  set -x
  mkdir ${OCTOPRINT_HOME}/Octoprint
  cd ${OCTOPRINT_HOME}/Octoprint
  python2 -m virtualenv venv
  source venv/bin/activate
  pip install pip --upgrade
  pip install https://github.com/foosel/OctoPrint/archive/${OCTOPRINT_RELEASE}.zip
  pip install https://github.com/Salandora/OctoPrint-FileManager/archive/master.zip
EOF

# Fix permissions for STL upload folder
mkdir -p /usr/share/models
chown octo:octo /usr/share/models
chmod 777 /usr/share/models

# Annotate ports in /etc/services
sed -i "/octoprint/d" /etc/services
cat >>/etc/services <<EOF
octoprint         5000/tcp
EOF

# Grant octo restart rights
echo "%octo ALL=NOPASSWD: /bin/systemctl restart octoprint.service" >> /etc/sudoers.d/octo
echo "%octo ALL=NOPASSWD: /sbin/reboot" >> /etc/sudoers.d/octo
echo "%octo ALL=NOPASSWD: /sbin/shutdown -h now" >> /etc/sudoers.d/octo
echo "%octo ALL=NOPASSWD: /sbin/poweroff" >> /etc/sudoers.d/octo

# Install systemd script
cat > /lib/systemd/system/octoprint.service <<EOF
[Unit]
Description=OctoPrint

[Service]
Type=simple
ExecStart=/home/octo/Octoprint/venv/bin/octoprint serve
Restart=always
RestartSec=60
User=octo

[Install]
WantedBy=multi-user.target
EOF

systemctl enable octoprint
